{"version":3,"file":"static/js/514.f30ac5f7.chunk.js","mappings":"oMACA,EAA4D,wBAA5D,EAAkG,6BAAlG,EAA6I,6BAA7I,EAAmL,wBAAnL,EAAsN,0BAAtN,EAAgQ,+BAAhQ,EAAuS,uBAAvS,EAA8U,+B,oBCgB9U,EARwC,SAACA,GACrC,IAAMC,EAAO,YAAcD,EAAME,GACjC,OAAOC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgB,IAAMA,EAASC,SAAA,EAClDC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAASG,IAAKR,EAAMS,MAAOC,IAAI,MAC/CH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIX,EAAKK,UAACC,EAAAA,EAAAA,KAAA,QAAAD,SAAON,EAAMa,WAExC,ECNA,EAHqC,SAACb,GAClC,OAAOO,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAEN,EAAMc,SACnD,E,wCCKMC,GAAcC,EAAAA,EAAAA,GAAiB,IAkBrC,GAAeC,EAAAA,EAAAA,GAAoC,CAACC,KAAM,2BAA1D,EAbmB,SAAClB,GAEhB,OAAOG,EAAAA,EAAAA,MAAA,QAAMgB,SAAUnB,EAAMoB,aAAad,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAAD,UACKe,EAAAA,EAAAA,IAA0C,qBACvC,iBACA,CAACC,EAAAA,EAAUP,GAAcQ,EAAAA,OAEjChB,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAEpB,ICwBA,EA7BqC,SAACN,GAClC,IAAIwB,EAAQxB,EAAMyB,YACdC,EAAkBF,EAAMG,WAAWC,KAAI,SAAAC,GAAG,OAC1CtB,EAAAA,EAAAA,KAACuB,EAAU,CAACjB,KAAMgB,EAAIhB,KAAmBX,GAAI2B,EAAI3B,GACrCO,MAAOoB,EAAIpB,OADUoB,EAAI3B,GACN,IAC/B6B,EAAmBP,EAAMQ,aAAaJ,KAAI,SAAAK,GAAI,OAC9C1B,EAAAA,EAAAA,KAAC2B,EAAO,CAACpB,QAASmB,EAAKnB,SAAcmB,EAAK/B,GAAK,IAKnD,OAAKF,EAAMmC,QAGPhC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAASC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAcC,SACzBoB,KAELvB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAWC,SAAA,EACvBH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,KAAGyB,MAEJxB,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,UAC5BC,EAAAA,EAAAA,KAAC6B,EAAc,CAACjB,SAdhB,SAACkB,GACjBrC,EAAMsC,YAAYD,EAAOE,eAC7B,aAC0BhC,EAAAA,EAAAA,KAACiC,EAAAA,GAAQ,CAAC5B,GAAI,UAiB5C,E,iDC3CI6B,EAA6B,SAACjB,GAC9B,MAAO,CACHW,OAAQX,EAAMkB,KAAKP,OAE3B,E,ICEA,GAAeQ,E,QAAAA,KACXC,EAAAA,EAAAA,KAPkB,SAACpB,GACvB,MAAO,CACHC,YAAaD,EAAMC,YAEvB,IAG2BoB,EAAAA,EAAAA,GAAA,GAAMC,EAAAA,KDA1B,SAA0BC,GAAsE,IAC7FC,EAAiB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAIlB,OAJkBC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,SAAAC,MACnB,WACI,OAAKC,KAAK3D,MAAMmC,QACT5B,EAAAA,EAAAA,KAACwC,GAASF,EAAAA,EAAAA,GAAA,GAAKc,KAAK3D,SADIO,EAAAA,EAAAA,KAACiC,EAAAA,GAAQ,CAAC5B,GAAI,UAEjD,KAACoC,CAAA,CAJkB,CAASY,EAAAA,WAShC,OAHqChB,EAAAA,EAAAA,IAAQH,EAARG,CACjCI,EAGR,GCZA,CAGGa,E","sources":["webpack://react-lesson-1/./src/components/Dialogs/Dialogs.module.css?8bcb","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Message/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__DHv9h\",\"dialog\":\"Dialogs_dialog__rC-al\",\"dialog_body\":\"Dialogs_dialog_body__yXy9P\",\"dialog_item\":\"Dialogs_dialog_item__V8EQZ\",\"active\":\"Dialogs_active__M1YX8\",\"messages\":\"Dialogs_messages__DxbpI\",\"messages_item\":\"Dialogs_messages_item__fhJUG\",\"photo\":\"Dialogs_photo__46Abt\",\"spaceTextArea\":\"Dialogs_spaceTextArea__hy+la\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    id: number\r\n    photo: string\r\n    name: string\r\n}\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n    const path = \"/dialogs/\" + props.id;\r\n    return <div className={s.dialog_item + ' ' + s.active}>\r\n        <img className={s.photo} src={props.photo} alt=\"\"/>\r\n        <NavLink to={path}><span>{props.name}</span></NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return <div className={s.messages_item}>{props.message}</div>\r\n}\r\nexport default Message;","import {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {\r\n    createField,\r\n    Textarea\r\n} from \"../../../common/FormsControls/FormsControls\";\r\nimport {\r\n    maxLengthCreator,\r\n    required\r\n} from \"../../../../utils/validators/validators\";\r\nimport {NewMessageFormValuesType} from \"../../Dialogs\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\ntype NewMessageFormValuesKeysType = Extract<keyof NewMessageFormValuesType, string>\r\ntype PropsType = {}\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormValuesType, PropsType>\r\n    & PropsType> = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            {createField<NewMessageFormValuesKeysType>(\"Enter your message\",\r\n                \"newMessageBody\",\r\n                [required, maxLength50], Textarea  )}\r\n        </div>\r\n        <div>\r\n            <button>Send</button></div>\r\n    </form>\r\n}\r\n\r\nexport default reduxForm<NewMessageFormValuesType>({form: \"dialog-add-message-form\"})\r\n(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport AddMessageForm\r\n    from \"./Message/AddMessageForm/AddMessageForm\";\r\nimport {\r\n    InitialStateType\r\n} from \"../../redux/dialogs-reducer\";\r\nimport {PhotosType} from \"../../types/types\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    dialogsPage: InitialStateType\r\n    sendMessage: (newMessageBody: string) => void\r\n    isAuth: boolean\r\n    photo: PhotosType\r\n}\r\n\r\nexport type NewMessageFormValuesType = {\r\n    newMessageBody: string\r\n}\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogData.map(dia =>\r\n        <DialogItem name={dia.name} key={dia.id} id={dia.id}\r\n                    photo={dia.photo}/>);\r\n    let messagesElements = state.messagesData.map(mess =>\r\n        <Message message={mess.message} key={mess.id}/>);\r\n\r\n    let addNewMessage = (values: NewMessageFormValuesType) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n    if (!props.isAuth) return <Navigate to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <div className={s.dialog_body}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>  {messagesElements}\r\n                </div>\r\n                    <div className={s.spaceTextArea}>\r\n                        <AddMessageForm onSubmit={addNewMessage} />\r\n                    </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n// import IntrinsicAttributes = React.JSX.IntrinsicAttributes;\r\n\r\ntype mapStateToPropsForRedirectPropsType = {\r\n    isAuth: boolean | null\r\n}\r\nlet mapStateToPropsForRedirect = (state: AppStateType): mapStateToPropsForRedirectPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    };\r\n};\r\n\r\n\r\nexport function withAuthRedirect(Component: React.ComponentType<mapStateToPropsForRedirectPropsType>) {\r\n    class RedirectComponent extends React.Component<mapStateToPropsForRedirectPropsType> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n        RedirectComponent\r\n    );\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {actions} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\nreturn {\r\n    dialogsPage: state.dialogsPage\r\n}\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {...actions}),\r\n    withAuthRedirect\r\n) (Dialogs);"],"names":["props","path","id","_jsxs","className","s","children","_jsx","src","photo","alt","NavLink","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","createField","required","Textarea","state","dialogsPage","dialogsElements","dialogData","map","dia","DialogItem","messagesElements","messagesData","mess","Message","isAuth","AddMessageForm","values","sendMessage","newMessageBody","Navigate","mapStateToPropsForRedirect","auth","compose","connect","_objectSpread","actions","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","React","Dialogs"],"sourceRoot":""}