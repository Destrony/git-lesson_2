{"version":3,"file":"static/js/58.6c9cb207.chunk.js","mappings":"mMACA,EAA4B,4B,UCGtBA,EAAY,IAAIC,UAAU,gEAY1BC,EAAiB,WAClB,OAAOC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACHC,EAAAA,EAAAA,KAACC,EAAQ,KACTD,EAAAA,EAAAA,KAACE,EAAe,MAGzB,EACMD,EAAqB,WACvB,IAAAE,GACIC,EAAAA,EAAAA,UAA4B,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAD5BI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GASxB,OANJI,EAAAA,EAAAA,YAAU,WACNd,EAAUe,iBAAiB,WAAU,SAACC,GAClC,IAAIC,EAAcC,KAAKC,MAAMH,EAAEI,MAC/BP,GAAY,SAAAQ,GAAY,SAAAC,QAAAC,EAAAA,EAAAA,GAAOF,IAAYE,EAAAA,EAAAA,GAAKN,GAAW,GAC/D,GACJ,GAAG,KACQZ,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAACC,OAAQ,QAASC,UAAW,QAAQtB,SACvDQ,EAASe,KAAI,SAACC,EAAGC,GAAK,OAAKxB,EAAAA,EAAAA,KAACyB,EAAO,CAAaC,QAASH,GAAhBC,EAAqB,KAGvE,EACMC,EAAgD,SAAHE,GAAmB,IAAdD,EAAOC,EAAPD,QACnD,OAAO5B,EAAAA,EAAAA,MAAA,OAAK8B,UAAWC,EAAc9B,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAK8B,IAAKJ,EAAQK,MAAOC,IAAK,UAC9BhC,EAAAA,EAAAA,KAAA,KAAAD,SAAI2B,EAAQO,YACZjC,EAAAA,EAAAA,KAAA,SACC0B,EAAQA,SACT1B,EAAAA,EAAAA,KAAA,WAGT,EAEME,EAA4B,WAC9B,IAAAgC,GAA8B9B,EAAAA,EAAAA,UAAS,IAAG+B,GAAA7B,EAAAA,EAAAA,GAAA4B,EAAA,GAAnCR,EAAOS,EAAA,GAAEC,EAAUD,EAAA,GAS1B,OAAOrC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACHC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,YAAUqC,SAAU,SAAC1B,GAAC,OAClByB,EAAWzB,EAAE2B,cAAcC,MAAM,OAEzCvC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAQwC,QAdI,WACXd,IAGb/B,EAAU8C,KAAKf,GACPU,EAAW,IACf,EAQqCrC,SAAC,aAI1C,EACA,EA3D2B,WACvB,OAAOC,EAAAA,EAAAA,KAAA,OAAAD,UACHC,EAAAA,EAAAA,KAACH,EAAI,KAEb,C","sources":["webpack://react-lesson-1/./src/pages/Chat/ChatPage.module.css?0317","pages/Chat/ChatPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"photoSize\":\"ChatPage_photoSize__zsDD0\"};","import React, {useEffect, useState} from \"react\";\r\nimport chp from './ChatPage.module.css';\r\n\r\n\r\nconst wsChannel = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\nexport type ChatMessageType = {\r\n    message: string\r\n    photo:   string\r\n    userId: number\r\n    userName: string\r\n}\r\n const ChatPage: React.FC= () => {\r\n    return <div>\r\n        <Chat />\r\n    </div>\r\n}\r\nconst Chat: React.FC = () => {\r\n     return <div>\r\n         <Messages />\r\n         <AddMessageForms />\r\n     </div>\r\n\r\n}\r\nconst Messages: React.FC = () => {\r\n    const [messages, setMessages] =\r\n        useState<ChatMessageType[]>([]);\r\n\r\n    useEffect(() => {\r\n        wsChannel.addEventListener('message',(e:MessageEvent) => {\r\n            let newMessages = JSON.parse(e.data);\r\n            setMessages(prevMessages =>[...prevMessages, ...newMessages])\r\n        })\r\n    }, [])\r\n        return <div style={{height: '400px', overflowY: \"auto\"}}>\r\n        {messages.map((m, index) => <Message key={index} message={m} />)}\r\n    </div>\r\n\r\n}\r\nconst Message: React.FC<{message: ChatMessageType}> = ({message}) => {\r\n     return <div className={chp.photoSize}>\r\n         <img src={message.photo} alt={'icon'}/>\r\n         <b>{message.userName}</b>\r\n         <br/>\r\n         {message.message}\r\n         <hr/>\r\n     </div>\r\n\r\n}\r\n\r\nconst AddMessageForms: React.FC = () => {\r\n    const [message, setMessage] = useState('')\r\n    const sendMessage = () => {\r\n        if (!message) {\r\n            return;\r\n        }\r\nwsChannel.send(message)\r\n        setMessage('')\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            <textarea onChange={(e) =>\r\n                setMessage(e.currentTarget.value)} ></textarea>\r\n        </div>\r\n        <div>\r\n            <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default ChatPage;"],"names":["wsChannel","WebSocket","Chat","_jsxs","children","_jsx","Messages","AddMessageForms","_useState","useState","_useState2","_slicedToArray","messages","setMessages","useEffect","addEventListener","e","newMessages","JSON","parse","data","prevMessages","concat","_toConsumableArray","style","height","overflowY","map","m","index","Message","message","_ref","className","chp","src","photo","alt","userName","_useState3","_useState4","setMessage","onChange","currentTarget","value","onClick","send"],"sourceRoot":""}